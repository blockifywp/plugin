(()=>{var e,n,o;const t=window.matchMedia("(prefers-reduced-motion: reduce)");if(!t||t.matches)return;const i=new IntersectionObserver((e=>{e.forEach((e=>{const n=e.target,o="infinite"===n.style.animationIterationCount;if(e.isIntersecting&&!o){var t,l,a,s,r,d;n.classList.add("animate"),n.style.opacity="0",n.style.transform="none";const e=null!==(t=1e3*parseFloat(null==n||null===(l=n.style)||void 0===l||null===(a=l.animationDuration)||void 0===a?void 0:a.replace("s","")))&&void 0!==t?t:1e3,o=null!==(s=1e3*parseFloat(null==n||null===(r=n.style)||void 0===r||null===(d=r.animationDelay)||void 0===d?void 0:d.replace("s","")))&&void 0!==s?s:0;setTimeout((()=>{n.style.opacity="",n.style.transform=""}),e+o),i.unobserve(n)}}))}),{rootMargin:null!==(e=null===(n=window)||void 0===n||null===(o=n.blockify)||void 0===o?void 0:o.animationOffset)&&void 0!==e?e:"0px 0px 50px 0px"}),l=document.querySelectorAll(".has-animation");for(const e of l)i.observe(e)})();